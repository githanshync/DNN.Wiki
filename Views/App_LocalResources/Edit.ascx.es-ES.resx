<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblPageCreationError.Text" xml:space="preserve">
    <value>Ya existe una Página con ese nombre.</value>
  </data>
  <data name="NoEditAccess.Text" xml:space="preserve">
    <value>No tiene permiso para editar contenido en este módulo</value>
  </data>
  <data name="plDescription.Help" xml:space="preserve">
    <value>Esta descripción se usará en la etiqueta Meta-Description del HTML de la página DotNetNuke.</value>
  </data>
  <data name="plDescription.Text" xml:space="preserve">
    <value>Descripción (500 Caracteres)</value>
  </data>
  <data name="plKeywords.Help" xml:space="preserve">
    <value>Las meta-palabras clave asociadas con este tema.</value>
  </data>
  <data name="plKeywords.Text" xml:space="preserve">
    <value>Palabras clave (500 caracteres).</value>
  </data>
  <data name="plPageName.Help" xml:space="preserve">
    <value>El nombre de la página es el nombre que se usará en la URL para tu entrada en la wiki</value>
  </data>
  <data name="plPageName.Text" xml:space="preserve">
    <value>Nombre de la Página:</value>
  </data>
  <data name="plTitle.Help" xml:space="preserve">
    <value>Este es el título de la página que se mostrará en el título del navegador, pero no se usará en la URL.</value>
  </data>
  <data name="plTitle.Text" xml:space="preserve">
    <value>Título (256 caracteres)</value>
  </data>
  <data name="shSeo.Text" xml:space="preserve">
    <value>Optimización para motores de búsqueda de la página.</value>
  </data>
  <data name="StartAllowDiscuss.Text" xml:space="preserve">
    <value>Activar Comentarios en Página</value>
  </data>
  <data name="StartAllowRatings.Text" xml:space="preserve">
    <value>Activar Calificaciones de Página</value>
  </data>
  <data name="StartCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="StartDelete.Text" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="StartSave.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="StartSaveAndContinue.Text" xml:space="preserve">
    <value>Guardar &amp; Continuar</value>
  </data>
  <data name="StartWikiDirectionDetails.Text" xml:space="preserve">
    <value>* Para agregar una página, simplemente ingrese su nombre en texto 
            rodeado por doble corchetes mientras escribe su contenido; 
            la única limitación es que no puede tener más de 50 caracteres. 
            Esta también es la forma de hacer un enlace a una página existente. 
            &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ejemplo: [[Mi Enlace]] 
            &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ejemplo: [[Otro Enlace En Wiki]] &lt;BR&gt;&lt;BR&gt;* 
             Una vez que haya agregado una página, puede editarla navegando hasta 
            ella y haciendo clic en "Editar". &lt;BR&gt;&lt;BR&gt;* No hay límite en la cantidad de 
            páginas nuevas que puede agregar mientras crea nuevo contenido. &lt;BR&gt;&lt;BR&gt;* Las 
            nuevas páginas no apareceran en la vista de índices ni serán buscables 
            hasta que se haya creado contenido para ellas. &lt;BR&gt;&lt;BR&gt;* Puede agregar un 
            título a su enlace añadiendo una barra vertical después del nombre. Al hacer esto, 
            el título se mostrará como un hipervínculo en lugar del nombre de la página. 
            &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example: [[Mi Enlace|Un Título]] 
            &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Example: [[Otro Enlace En Wiki|Puedo decir lo que
            quiera I quiero]] &lt;BR&gt;&lt;BR&gt;* Para enlazar a una página de la wiki&amp;nbsp;en otra pestaña, puedes agregar una segunda barra             vertical después del título de la página con el número de la otra pestaña. &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;;Ejemplo usando solo el             nombre de la página: 
            [[Mi Página||35]] &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ejemplo con título de página: [[Mi 
            Página|Mi Título aqui|35]] &lt;BR&gt;&lt;BR&gt;* Para enlazar de regreso a la página de inicio, usa el enlace entre corchetes a             WikiHomePage. 
            &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ejemplo: 
            [[WikiHomePage]] &lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ejemplo: 
            [[WikiHomePage|Home]] &lt;BR&gt;&lt;BR&gt;* Debido a que usamos el editor WYSIWYG de HTML, los enlaces de correo electrónico y             las URL pueden agregarse simplemente escribiéndolos y dejando que el editor los maneje automáticamente; o como etiquetas             normales&amp;nbsp;&amp;lt;a href&amp;gt; 
            tags&amp;nbsp;en la vista HTML del editor.</value>
  </data>
  <data name="StartWikiDirections.Text" xml:space="preserve">
    <value>Instrucciones de texto de la Wiki</value>
  </data>
  <data name="SubmitButton.Text" xml:space="preserve">
    <value>Postear Comentario</value>
  </data>
  <data name="ErrorDeletingTopic.Text" xml:space="preserve">
    <value>Ocurrió un error al intentar eliminar el tema.</value>
  </data>
  <data name="WarningDUPLICATENAME.Text" xml:space="preserve">
    <value>Ya existe un tema de wiki con el mismo nombre.</value>
  </data>
  <data name="JournalInsertTopicSummary.Text" xml:space="preserve">
    <value>Nuevo tema adicionado [TopicName].</value>
  </data>
  <data name="JournalUpdateTopicSummary.Text" xml:space="preserve">
    <value>Tema actualizado [TopicName].</value>
  </data>
</root>